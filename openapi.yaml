openapi: 3.0.0
info:
  title: Badrap App API
  version: 0.11.0
security:
  - bearerAuth: []
tags:
  - name: Installations
    description: Installation management
  - name: Feeds
    description: Feed management
  - name: UI
paths:
  /app/token:
    post:
      summary: Validate a bearer token
      tags:
        - UI
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
              required:
                - token
      responses:
        "200":
          description: Token OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  installation_id:
                    type: string
                    format: uuid
                    description: |-
                      The ID of the installation that the request is done
                      for.
                  session_id:
                    type: string
                    description: |-
                      An opaque string associated with the browser session
                      the request is done in behalf of.
                  expires_at:
                    type: number
                    description: |-
                      The expiration timestamp of this token, in seconds
                      since the epoch.
                    example: 1622496600.5
                required:
                  - installationId
                  - sessionId
                  - expiresAt
        "400":
          description: Bad Request
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          description: Invalid token
  /app/installations:
    get:
      summary: List installations
      tags:
        - Installations
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    removed:
                      type: boolean
                  required:
                    - id
                    - removed
        "403":
          $ref: "#/components/responses/Forbidden"
  /app/installations/{id}:
    parameters:
      - $ref: "#/components/parameters/installationId"
    get:
      summary: Get an installation by ID
      tags:
        - Installations
      responses:
        "200":
          description: OK
          headers:
            ETag:
              description: |-
                Entity Tag header that changes whenever the installation's
                state object is updated (regardless whether the state object
                actually changes).
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  removed:
                    type: boolean
                  state:
                    type: object
                required:
                  - id
                  - removed
                  - state
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          description: Not Found
    patch:
      summary: Update installation state and/or assets
      tags:
        - Installations
      parameters:
        - name: If-Match
          in: header
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                state:
                  type: object
                assets:
                  type: array
                  items:
                    allOf:
                      - oneOf:
                          - $ref: "#/components/schemas/IpAsset"
                          - $ref: "#/components/schemas/EmailAsset"
                          - $ref: "#/components/schemas/DomainAsset"
                          - $ref: "#/components/schemas/OpaqueAsset"
                      - type: object
                        properties:
                          key:
                            type: string
                            format: byte
                            maxLength: 64
                            example: "AAAAAA=="
                          props:
                            type: object
                            example: { title: "My example asset" }
      responses:
        "204":
          description: No Content
          headers:
            ETag:
              description: |-
                Entity Tag header of the installation's (potentially updated) state object.
              schema:
                type: string
        "400":
          description: Bad Request
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          description: Not Found
        "412":
          description: Precondition Failed
        "428":
          description: If-Match header missing
    delete:
      summary: Delete an installation
      tags:
        - Installations
      responses:
        "204":
          description: The installation was deleted successfully
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          description: The installation was not found
        "405":
          description: The installation was found, but could not be deleted
  /app/installations/{id}/owner/assets:
    parameters:
      - $ref: "#/components/parameters/installationId"
    get:
      summary: "List installation owner's assets"
      tags:
        - Installations
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: "#/components/schemas/IpAsset"
                    - $ref: "#/components/schemas/EmailAsset"
                    - $ref: "#/components/schemas/DomainAsset"
        "403":
          $ref: "#/components/responses/Forbidden"
  /app/feeds:
    get:
      summary: List feeds
      tags:
        - Feeds
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      $ref: "#/components/schemas/FeedName"
                  required:
                    - name
        "403":
          $ref: "#/components/responses/Forbidden"
    post:
      summary: Create a feed
      tags:
        - Feeds
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/FeedProperties"
                - type: object
                  required:
                    - name
      responses:
        "201":
          description: Created
          headers:
            ETag:
              description: Entity Tag header that changes whenever the feed is updated.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Feed"
        "400":
          description: Bad Request
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          description: Conflict
  /app/feeds/{name}:
    parameters:
      - $ref: "#/components/parameters/feedName"
    get:
      summary: Get a feed by name
      tags:
        - Feeds
      responses:
        "200":
          description: OK
          headers:
            ETag:
              description: Entity Tag header that changes whenever the feed is updated.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Feed"
        "304":
          description: Not Modified
        "400":
          description: Bad Request
        "403":
          $ref: "#/components/responses/Forbidden"
    patch:
      summary: Modify a feed
      tags:
        - Feeds
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FeedProperties"
      responses:
        "200":
          description: OK
          headers:
            ETag:
              description: Entity Tag header that changes whenever the feed is updated.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Feed"
        "400":
          description: Bad Request
        "403":
          $ref: "#/components/responses/Forbidden"
        "412":
          description: Precondition Failed
        "428":
          description: If-Match header missing
    delete:
      summary: Delete a feed
      tags:
        - Feeds
      responses:
        "204":
          description: The feed was deleted successfully
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          description: Not Found
  /app/feeds/{name}/events:
    parameters:
      - $ref: "#/components/parameters/feedName"
    post:
      summary: Send globally-scoped events to a feed
      tags:
        - Feeds
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/Event"
      responses:
        "204":
          description: No Content
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          description: Not Found
  /installations/{id}/feeds/{name}/events:
    parameters:
      - $ref: "#/components/parameters/installationId"
      - $ref: "#/components/parameters/feedName"
    post:
      description: Send installation-scoped events to a feed
      tags:
        - Feeds
        - Installations
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/Event"
      responses:
        "204":
          description: No Content
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          description: Not Found
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
  schemas:
    IpAsset:
      type: object
      properties:
        type:
          type: string
          enum: ["ip"]
        value:
          description: an IPv4 or IPv6 address
          oneOf:
            - type: string
              format: ipv4
              example: "192.0.2.100"
            - type: string
              format: ipv6
              example: "2001:db8::7334"
      required:
        - type
        - value
    DomainAsset:
      type: object
      properties:
        type:
          type: string
          enum: ["domain"]
        value:
          type: string
          format: hostname
          example: "host.example.com"
      required:
        - type
        - value
    EmailAsset:
      type: object
      properties:
        type:
          type: string
          enum: ["email"]
        value:
          type: string
          format: email
      required:
        - type
        - value
    OpaqueAsset:
      type: object
      properties:
        type:
          type: string
          enum: ["opaque"]
        value:
          type: string
          format: byte
          maxLength: 64
          example: "AAAAAA=="
      required:
        - type
        - value
    FeedName:
      type: string
      pattern: "^[a-z0-9_-]{1,32}$"
      minLength: 1
      maxLength: 32
    FeedProperties:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/FeedName"
        title:
          type: string
          nullable: true
        summary_template:
          $ref: "#/components/schemas/SummaryTemplate"
          nullable: true
        details_template:
          $ref: "#/components/schemas/DetailsTemplate"
          nullable: true
    Feed:
      allOf:
        - $ref: "#/components/schemas/FeedProperties"
        - type: object
          required:
            - name
            - title
            - summaryTemplate
            - detailsTemplate
    SummaryTemplate: {}
    DetailsTemplate: {}
    Event:
      allOf:
        - oneOf:
            - $ref: "#/components/schemas/IpAsset"
            - $ref: "#/components/schemas/EmailAsset"
            - $ref: "#/components/schemas/DomainAsset"
            - $ref: "#/components/schemas/OpaqueAsset"
        - type: object
          properties:
            key:
              type: string
              format: byte
              maxLength: 64
              example: "AAAAAA=="
            props:
              type: object
              example: { extra: "info" }
  parameters:
    installationId:
      description: ID of an installation
      name: id
      in: path
      schema:
        type: string
        format: uuid
      required: true
    feedName:
      description: Name of a feed
      name: name
      in: path
      schema:
        $ref: "#/components/schemas/FeedName"
      required: true
  responses:
    Forbidden:
      description: Forbidden
