openapi: 3.0.0
info:
  title: Badrap App API
  version: 0.10.1
security:
  - bearerAuth: []
paths:
  /app/token:
    post:
      summary: Validate a bearer token.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
              required:
                - token
      responses:
        "200":
          description: Token OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  installationId:
                    type: string
                    format: uuid
                    description:
                      The ID of the installation that the request is done
                      for.
                  sessionId:
                    type: string
                    description:
                      An opaque string associated with the browser session
                      the request is done in behalf of.
                  expiresAt:
                    type: number
                    description:
                      The expiration timestamp of this token, in seconds
                      since the epoch.
                required:
                  - installationId
                  - sessionId
                  - expiresAt
        "400":
          description: Bad Request
        "404":
          description: Invalid token
  /app/installations:
    get:
      summary: Returns a list of installations.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    removed:
                      type: boolean
                  required:
                    - id
                    - removed
  /app/installations/{id}:
    parameters:
      - $ref: "#/components/parameters/installationId"
    get:
      summary: Gets an installation by ID.
      responses:
        "200":
          description: OK
          headers:
            ETag:
              description:
                Entity Tag header that changes whenever the installation's
                state object is updated (regardless whether the state object
                actually changes).
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  removed:
                    type: boolean
                  state:
                    type: object
                required:
                  - id
                  - removed
                  - state
        "404":
          description: Not Found
    patch:
      summary: Updates installation state and/or assets.
      parameters:
        - name: If-Match
          in: header
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                state:
                  type: object
                assets:
                  type: array
                  items:
                    allOf:
                      - oneOf:
                          - $ref: "#/components/schemas/IpAsset"
                          - $ref: "#/components/schemas/EmailAsset"
                          - $ref: "#/components/schemas/DomainAsset"
                          - $ref: "#/components/schemas/OpaqueAsset"
                      - type: object
                        properties:
                          key:
                            type: string
                            format: byte
                            maxLength: 64
                            example: "AAAAAA=="
                          props:
                            type: object
                            example: { title: "My example asset" }
      responses:
        "200":
          description: OK
          headers:
            ETag:
              description: Entity Tag header of the installation's (potentially updated) state object.
              schema:
                type: string
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "412":
          description: Precondition Failed
        "428":
          description: If-Match header missing
    delete:
      summary: Deletes an installation.
      responses:
        "204":
          description: The installation was deleted successfully
        "404":
          description: The installation was not found
        "405":
          description: The installation was found, but could not be deleted
  /app/installations/{id}/owner/assets:
    parameters:
      - $ref: "#/components/parameters/installationId"
    get:
      summary: "Gets a list of installation owner's (user's) assets."
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: "#/components/schemas/IpAsset"
                    - $ref: "#/components/schemas/EmailAsset"
                    - $ref: "#/components/schemas/DomainAsset"
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
  schemas:
    IpAsset:
      type: object
      properties:
        type:
          type: string
          enum: ["ip"]
        value:
          oneOf:
            - type: string
              format: ipv4
            - type: string
              format: ipv6
          example: "192.0.2.100"
      required:
        - type
        - value
    DomainAsset:
      type: object
      properties:
        type:
          type: string
          enum: ["domain"]
        value:
          type: string
          format: domain
          example: "host.example.com"
      required:
        - type
        - value
    EmailAsset:
      type: object
      properties:
        type:
          type: string
          enum: ["email"]
        value:
          type: string
          format: email
      required:
        - type
        - value
    OpaqueAsset:
      type: object
      properties:
        type:
          type: string
          enum: ["opaque"]
        value:
          type: string
          format: byte
          maxLength: 64
          example: "AAAAAA=="
      required:
        - type
        - value
  parameters:
    installationId:
      description: ID of an installation
      name: id
      in: path
      schema:
        type: string
        format: uuid
      required: true
